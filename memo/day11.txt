[ ArrayList 실습1]

과일 정보를 담을 클래스 선언(Fruit)
	- 과일 이름 (중복 없음)
	- 과일 가격 

CRUD 관련 기능을 담아놓을 클래스 선언(Market)
	- 과일 추가
	- 과일 삭제
	- 과일 가격이 평균 가격보다 낮은 지 검사
	- 과일 전체 조회
	- 과일 이름으로 가격 조회


[ArrayList 실습2]

음식 정보를 담을 클래스 선언(Food)
   - 음식 이름
   - 음식 가격
   - 음식 종류(한식, 중식, 일식, 양식)

CRUD관련 기능을 담아놓을 클래스 선언(Restaurant)
   - 음식 추가
   - 음식 이름으로 음식 종류 조회
   - 사용자가 원하는 종류의 음식 전체 조회
   - 음식 종류 수정 후 가격 10% 상승
   - 사용자가 원하는 종류의 음식 개수 조회


[ArrayList 실습3]

이상형 정보를 담을 클래스 선언(Love)
   - 번호
   - 이름
   - 나이

CRUD관련 기능을 담아놓을 클래스 선언(DateApp)
   - 사용자가 원하는 나이의 이상형 목록 조회
   - 이상형의 나이 수정
   - 이상형 나이 순 정렬

[ArrayList 실습4]
   본인이 주제 선정해서 만들기

----------------------------------------------------------------------------------------------------------------------------
2. set extends Collection
- 구현 클래스 (Hashset을 쓸거면 toString,equals 메소드를 무조건 재정의 해줘야 한다.)
	HashSet (HashCode = 주소값. 주소값들을 비교해서 같으면 같은 값이니까 삭제하는 알고리즘)
		집합에서는 중복되는 원소를 포함할 수 없는 것처럼
		HashSet이라는 자료구조는 중복되는 값을 무시한다.
		저장된 값들은 인덱스가 없기 때문에 순서가 없다.
		값의 유무검사에 특화되어 있는 자료구조이고
		해시코드로 유무 검사가 진행되기 때문에 속도가 상대적으로 좋다.

- 순서 부여 (hashset에 있는 집합들은 순서가 없어서 가져올 수가 없다.)
	순서가 없는 객체에 순서를 부여하거나, 순서가 있어도 iterator방식의 순서로
	변경하고자 할 때 사용한다.
	hasNext()를 통해 다음 값이 있는지 검사하고, next()를 사용해서 값을 가져온다.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. Map

- 구현 클래스
	HashMap(서버 간 데이터 교환)
		Key와 Value 한 쌍으로 저장되며, 검색의 목적을 가지고 있다.
		Key에 중복된 값을 넣으면 Value가 최근 값으로 수정되고
		중복되지 않은 값을 넣으면 새롭게 추가된다. Value는 중복이 가능하다.
		

JSON
	JSON형식.put("key값", value값); // json에 필드를 넣음
	JSON형식.get("key값"); // 그 key값의 value값을 가져옴















